{"ast":null,"code":"var _jsxFileName = \"/Users/kristinapestininke/WebstormProjects/ExpenseTrackerApp/src/components/themeProvider/ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThemeContext = /*#__PURE__*/createContext();\nconst ThemeProvider = ({\n  children\n}) => {\n  _s();\n  const [theme, setTheme] = useState('light');\n  const toggleTheme = () => {\n    setTheme(theme === 'light' ? 'dark' : 'light');\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggleTheme\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeProvider, \"c/tiXTWXTQispzpG//dV5FX41vQ=\");\n_c = ThemeProvider;\nexport { ThemeProvider, ThemeContext };\n\n// const ThemeContext = createContext();\n\n// export const ThemeProvider = ({ children }) => {\n//   // 1. nusettint defaultine thema (light)\n//   // \n//   const [theme, setTheme] = useState('light');\n\n//   const toggleTheme = () => {\n//     const newTheme = theme === 'light' ? 'dark' : 'light';\n//     window.localStorage.setItem('theme', newTheme);\n//     setTheme(newTheme);\n//   };\n\n//   return (\n\n//     <ThemeContext.Provider value={{ theme, toggleTheme }}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// export const useTheme = () => {\n//   // gali but light ir dark\n//   return useContext(ThemeContext);\n// };\n// export const GlobalStyles = create`\n\n// `;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","theme","setTheme","toggleTheme","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kristinapestininke/WebstormProjects/ExpenseTrackerApp/src/components/themeProvider/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\nconst ThemeContext = createContext();\n\nconst ThemeProvider = ({ children }) => {\n    const [theme, setTheme] = useState('light');\n\n    const toggleTheme = () => {\n        setTheme(theme === 'light' ? 'dark' : 'light');\n    };\n\n    return (\n        <ThemeContext.Provider value={{ theme, toggleTheme }}>\n            {children}\n        </ThemeContext.Provider>\n    );\n};\n\nexport { ThemeProvider, ThemeContext };\n\n\n// const ThemeContext = createContext();\n\n// export const ThemeProvider = ({ children }) => {\n//   // 1. nusettint defaultine thema (light)\n//   // \n//   const [theme, setTheme] = useState('light');\n\n//   const toggleTheme = () => {\n//     const newTheme = theme === 'light' ? 'dark' : 'light';\n//     window.localStorage.setItem('theme', newTheme);\n//     setTheme(newTheme);\n//   };\n\n//   return (\n\n//     <ThemeContext.Provider value={{ theme, toggleTheme }}>\n//       {children}\n//     </ThemeContext.Provider>\n//   );\n// };\n\n// export const useTheme = () => {\n//   // gali but light ir dark\n//   return useContext(ThemeContext);\n// };\n// export const GlobalStyles = create`\n \n// `;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,YAAY,gBAAGJ,aAAa,CAAC,CAAC;AAEpC,MAAMK,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EAE3C,MAAMS,WAAW,GAAGA,CAAA,KAAM;IACtBD,QAAQ,CAACD,KAAK,KAAK,OAAO,GAAG,MAAM,GAAG,OAAO,CAAC;EAClD,CAAC;EAED,oBACIL,OAAA,CAACC,YAAY,CAACO,QAAQ;IAACC,KAAK,EAAE;MAAEJ,KAAK;MAAEE;IAAY,CAAE;IAAAJ,QAAA,EAChDA;EAAQ;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACT,EAAA,CAZIF,aAAa;AAAAY,EAAA,GAAbZ,aAAa;AAcnB,SAASA,aAAa,EAAED,YAAY;;AAGpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}