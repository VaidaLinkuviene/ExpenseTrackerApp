{"ast":null,"code":"// import { useEffect, useState } from 'react';\n// export const useDarkMode = () => {\n//     const [theme, setTheme] = useState('light');\n//     const [mountedComponent, setMountedComponent] = useState(false)\n//     const setMode = mode => {\n//         window.localStorage.setItem('theme', mode)\n//         setTheme(mode)\n//     };\n\n//     const themeToggler = () => {\n//         theme === 'light' ? setMode('dark') : setMode('light')\n//     };\n\n//     useEffect(() => {\n//         const localTheme = window.localStorage.getItem('theme');\n//         localTheme ? setTheme(localTheme) : setMode('light')\n//         setMountedComponent(true)\n//     }, []);\n\n//     return [theme, themeToggler, mountedComponent]\n// };","map":{"version":3,"names":[],"sources":["/Users/kristinapestininke/WebstormProjects/ExpenseTrackerApp/src/components/useDarkMode/UseDarkMode.js"],"sourcesContent":["// import { useEffect, useState } from 'react';\n// export const useDarkMode = () => {\n//     const [theme, setTheme] = useState('light');\n//     const [mountedComponent, setMountedComponent] = useState(false)\n//     const setMode = mode => {\n//         window.localStorage.setItem('theme', mode)\n//         setTheme(mode)\n//     };\n\n//     const themeToggler = () => {\n//         theme === 'light' ? setMode('dark') : setMode('light')\n//     };\n\n//     useEffect(() => {\n//         const localTheme = window.localStorage.getItem('theme');\n//         localTheme ? setTheme(localTheme) : setMode('light')\n//         setMountedComponent(true)\n//     }, []);\n\n//     return [theme, themeToggler, mountedComponent]\n// };"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}