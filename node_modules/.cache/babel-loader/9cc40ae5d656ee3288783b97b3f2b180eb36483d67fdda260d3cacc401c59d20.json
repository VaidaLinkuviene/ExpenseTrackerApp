{"ast":null,"code":"var _jsxFileName = \"/Users/kristinapestininke/WebstormProjects/ExpenseTrackerApp/src/components/DoughnutChart/DoughnutChart.js\",\n  _s = $RefreshSig$();\n// import React from 'react'\n// import DonutChart from 'react-donut-chart';\n\n// function DoughnutChart() {\n//   return (\n//     <div>\n// <DonutChart\n//   data={[\n//     {\n//       label: 'Food',\n//       value: 25,\n//     },\n//     {\n//       label: 'Clothes',\n//       value: 15,\n//       isEmpty: true,\n//     },\n//     {\n//         label: 'Transport',\n//         value: 15,\n//     },\n//     {\n//         label: 'Entertainments',\n//         value: 17,\n//     },\n//     {\n//         label: 'Medicine',\n//         value: 10,\n//     },\n\n//   ]}\n// />;\n\n//     </div>\n//   )\n// }\n\n// export default DoughnutChart\n\nimport React, { useState, useEffect } from \"react\";\nimport Chart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Donutchart() {\n  _s();\n  const [contryname, setCountryname] = useState([]);\n  const [medal, setMedal] = useState([]);\n  useEffect(() => {\n    const getdata = async () => {\n      const countryname = [];\n      const getmedal = [];\n      const reqData = await fetch(\"http://localhost/reactgraphtutorial/medals\");\n      const resData = await reqData.json();\n      for (let i = 0; i < resData.length; i++) {\n        countryname.push(resData[i].country);\n        getmedal.push(parseInt(resData[i].medals));\n      }\n      setCountryname(countryname);\n      setMedal(getmedal);\n    };\n    getdata();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-left\",\n        children: \"Donut Chart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"donut\",\n        width: 1349,\n        height: 550,\n        series: medal,\n        options: {\n          labels: contryname,\n          title: {\n            text: \"Medal Country Name\"\n            // align:\"center\",\n          },\n\n          plotOptions: {\n            pie: {\n              donut: {\n                labels: {\n                  show: true,\n                  total: {\n                    show: true,\n                    showAlways: true,\n                    //formatter: () => '343',\n                    fontSize: 30,\n                    color: '#f90000'\n                  }\n                }\n              }\n            }\n          },\n          dataLabels: {\n            enabled: true\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n_s(Donutchart, \"lKCZmvuh9+SeB+C+on9hIFrN33s=\");\n_c = Donutchart;\nexport default Donutchart;\nvar _c;\n$RefreshReg$(_c, \"Donutchart\");","map":{"version":3,"names":["React","useState","useEffect","Chart","jsxDEV","_jsxDEV","Donutchart","_s","contryname","setCountryname","medal","setMedal","getdata","countryname","getmedal","reqData","fetch","resData","json","i","length","push","country","parseInt","medals","Fragment","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","width","height","series","options","labels","title","text","plotOptions","pie","donut","show","total","showAlways","fontSize","color","dataLabels","enabled","_c","$RefreshReg$"],"sources":["/Users/kristinapestininke/WebstormProjects/ExpenseTrackerApp/src/components/DoughnutChart/DoughnutChart.js"],"sourcesContent":["// import React from 'react'\n// import DonutChart from 'react-donut-chart';\n\n// function DoughnutChart() {\n//   return (\n//     <div>\n// <DonutChart\n//   data={[\n//     {\n//       label: 'Food',\n//       value: 25,\n//     },\n//     {\n//       label: 'Clothes',\n//       value: 15,\n//       isEmpty: true,\n//     },\n//     {\n//         label: 'Transport',\n//         value: 15,\n//     },\n//     {\n//         label: 'Entertainments',\n//         value: 17,\n//     },\n//     {\n//         label: 'Medicine',\n//         value: 10,\n//     },\n\n\n//   ]}\n// />;\n\n//     </div>\n//   )\n// }\n\n// export default DoughnutChart\n\n\nimport React ,{useState, useEffect}from \"react\";\nimport Chart from 'react-apexcharts';\n\nfunction Donutchart()\n{\n    const [contryname, setCountryname]= useState([]);\n    const [medal, setMedal]= useState([]);\n\n    useEffect( ()=>{\n     const getdata= async()=>{\n          const countryname=[];\n          const getmedal=[];\n\n        const reqData= await fetch(\"http://localhost/reactgraphtutorial/medals\"); \n        const resData= await reqData.json();\n        for(let i=0; i<resData.length; i++)\n        {\n            countryname.push(resData[i].country);\n            getmedal.push(parseInt(resData[i].medals));\n        }\n        setCountryname(countryname);\n        setMedal(getmedal);\n     \n\n     }\n     getdata();\n    },[]);\n\n    return(\n        <React.Fragment>\n            <div className='container-fluid mt-3 mb-3'>        \n            <h2 className=\"text-left\">Donut Chart</h2>\n            <Chart \n            type=\"donut\"\n            width={1349}\n            height={ 550}\n            series={medal}\n\n            options={{\n             labels:contryname,\n             title:{\n                text:\"Medal Country Name\",\n               // align:\"center\",\n             },\n\n             plotOptions:{\n             pie:{\n                donut:{\n                    labels:{\n                        show:true,\n                        total:{\n                            show:true,\n                            showAlways:true,\n                             //formatter: () => '343',\n                            fontSize:30,\n                            color: '#f90000',\n                        }\n                    }\n                }\n             }\n\n             },\n\n             dataLabels:{\n                enabled:true,\n             }\n\n\n            }}\n            \n            />\n\n            </div>\n        </React.Fragment>\n    );\n}\nexport default Donutchart;\n\n\n"],"mappings":";;AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAM,OAAO;AAC/C,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,SAASC,UAAUA,CAAA,EACnB;EAAAC,EAAA;EACI,MAAM,CAACC,UAAU,EAAEC,cAAc,CAAC,GAAER,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAEV,QAAQ,CAAC,EAAE,CAAC;EAErCC,SAAS,CAAE,MAAI;IACd,MAAMU,OAAO,GAAE,MAAAA,CAAA,KAAS;MACnB,MAAMC,WAAW,GAAC,EAAE;MACpB,MAAMC,QAAQ,GAAC,EAAE;MAEnB,MAAMC,OAAO,GAAE,MAAMC,KAAK,CAAC,4CAA4C,CAAC;MACxE,MAAMC,OAAO,GAAE,MAAMF,OAAO,CAACG,IAAI,CAAC,CAAC;MACnC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACF,OAAO,CAACG,MAAM,EAAED,CAAC,EAAE,EAClC;QACIN,WAAW,CAACQ,IAAI,CAACJ,OAAO,CAACE,CAAC,CAAC,CAACG,OAAO,CAAC;QACpCR,QAAQ,CAACO,IAAI,CAACE,QAAQ,CAACN,OAAO,CAACE,CAAC,CAAC,CAACK,MAAM,CAAC,CAAC;MAC9C;MACAf,cAAc,CAACI,WAAW,CAAC;MAC3BF,QAAQ,CAACG,QAAQ,CAAC;IAGrB,CAAC;IACDF,OAAO,CAAC,CAAC;EACV,CAAC,EAAC,EAAE,CAAC;EAEL,oBACIP,OAAA,CAACL,KAAK,CAACyB,QAAQ;IAAAC,QAAA,eACXrB,OAAA;MAAKsB,SAAS,EAAC,2BAA2B;MAAAD,QAAA,gBAC1CrB,OAAA;QAAIsB,SAAS,EAAC,WAAW;QAAAD,QAAA,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1C1B,OAAA,CAACF,KAAK;QACN6B,IAAI,EAAC,OAAO;QACZC,KAAK,EAAE,IAAK;QACZC,MAAM,EAAG,GAAI;QACbC,MAAM,EAAEzB,KAAM;QAEd0B,OAAO,EAAE;UACRC,MAAM,EAAC7B,UAAU;UACjB8B,KAAK,EAAC;YACHC,IAAI,EAAC;YACN;UACF,CAAC;;UAEDC,WAAW,EAAC;YACZC,GAAG,EAAC;cACDC,KAAK,EAAC;gBACFL,MAAM,EAAC;kBACHM,IAAI,EAAC,IAAI;kBACTC,KAAK,EAAC;oBACFD,IAAI,EAAC,IAAI;oBACTE,UAAU,EAAC,IAAI;oBACd;oBACDC,QAAQ,EAAC,EAAE;oBACXC,KAAK,EAAE;kBACX;gBACJ;cACJ;YACH;UAEA,CAAC;UAEDC,UAAU,EAAC;YACRC,OAAO,EAAC;UACX;QAGD;MAAE;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAED,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEG;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACM,CAAC;AAEzB;AAACxB,EAAA,CAxEQD,UAAU;AAAA4C,EAAA,GAAV5C,UAAU;AAyEnB,eAAeA,UAAU;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}